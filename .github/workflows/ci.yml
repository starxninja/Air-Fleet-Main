name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend Dependencies
        shell: powershell
        run: |
          cd airfleet-management
          npm install
          cd ..

      - name: Install Backend Dependencies
        shell: powershell
        run: |
          cd airfleet-management-backend
          npm install
          cd ..

      - name: Set up Docker to use Minikube's environment
        shell: powershell
        run: |
          & minikube -p minikube docker-env --shell powershell | Invoke-Expression
          Write-Output "Docker environment set up"

      - name: Verify Docker Environment
        shell: powershell
        run: |
          docker --version
          docker info --format '{{.ServerVersion}}'

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Docker Image
        shell: powershell
        run: |
          docker build -f airfleet-management/Dockerfile -tx752/airline-frontend:latest .
          docker push starnxinja/airline-frontend:latest

      - name: Build and Push Backend Docker Image
        shell: powershell
        run: |
          docker build -f airfleet-management-backend/Dockerfile -t starnxinja/airline-backend:latest .
          docker push starx752/airline-backend:latest

      - name: Deploy to Minikube
        shell: powershell
        run: |
          kubectl apply -f k8s/frontend-d stareployment.yaml -n airfleet
          kubectl apply -f k8s/frontend-service.yaml -n airfleet
          kubectl apply -f k8s/backend-deployment.yaml -n airfleet
          kubectl apply -f k8s/backend-service.yaml -n airfleet
          kubectl apply -f k8s/mongo-deployment.yaml -n airfleet
          kubectl apply -f k8s/mongo-service.yaml -n airfleet
          kubectl apply -f k8s/mongo-pvc.yaml -n airfleet